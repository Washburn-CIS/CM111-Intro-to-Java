<section xml:id="section.variables">
    <title>Variables</title>
    
    <p>Notice that when you type an expression in to the JShell REPL, more than just the resulting value is printed to the screen. For example, when you type the literal expression 5 in to the REPL, this is what you see:</p>
    
<console>
<prompt>jshell> </prompt><input> 5</input>
<output>$1 ==> 5</output>
</console>
    
    <p>The <output>$1</output> that you see indicates the name of an automatically generated variable. 
        <termdef xml:id="term.variable"> A <firstterm>variable</firstterm> is a named portion of computer memory that holds a single value. </termdef> 
        In this case, the value <c>5</c> is stored in computer memory at a location accessible with the variable name <varname>$1</varname>. 
        </p>
    
    <p>Variables in programming are similar to the idea of a variable you've seen in algebra. In algebra, the variable  represents an unknown quantity. Likewise, when you write a program, you may not know what value a variable you're using will eventually hold. However, at the time when your program is running (known as <firstterm>run time</firstterm>), the variable's value will be known to the computer, just as the        value of a variable in algebra is known when you solve an equation. </p>
    
    <p>When you type an expression in to the REPL, another variable will be automatically generated to hold the value. For instance:</p>
<console>
<prompt>jshell> </prompt><input>5</input>
<output>$1 ==> 5</output>

<prompt>jshell> </prompt><input>9</input>
<output>$2 ==> 9 </output>
</console>

<p>
    Variables aren't just used for storing values but can also be used to retrieve values. A <firstterm>variable expression</firstterm> is simply the name of a variable and evaluates to the value held by the variable. For example:
<console>
<prompt>jshell> </prompt><input>5</input>
<output>$1 ==> 5</output>
<prompt>jshell> </prompt><input>9</input>
<output>$2 ==> 9</output>

<prompt>jshell> </prompt><input>$1</input>
<output>$1 ==> 5</output>

<prompt>jshell> </prompt><input>$2</input>
<output>$2 ==> 9</output>
    
</console>
    Note that when a variable expression is evaluated by itself, another new variable is not automatically generated by the REPL to hold the value (that would be redundant). 
</p>
    
<p>
Variable expressions can also be part of more complex expressions by combining them with operators. For instance:
<console>
<prompt>jshell> </prompt><input>5</input>
<output>$1 ==> 5</output>

<prompt>jshell> </prompt><input>9</input>
<output>$2 ==> 9</output>

<prompt>jshell> </prompt><input>$1 + $2</input>
<output>$3 ==> 14</output>
</console>
</p>
</section>

